type Comment implements Likeable @model(class: "App\\Domain\\Comments\\Models\\Comment") {
  createdAt: DateTime! @rename(attribute: "created_at")
  "Globally unique identifier."
  id: ID! @globalId
  "A list of likes associated with the comment."
  likes: [Like!]! @morphMany(type: "connection")
  "Post where the comment was created."
  post: Post! @belongsTo
  "User that created the comment."
  user: User! @belongsTo
  "The post's text."
  text: String
  "Returns a boolean indicating whether the viewing user has liked this comment."
  viewerHasLiked: Boolean! @with(relation: "likes") @field(resolver: "App\\GraphQL\\Types\\Comment@viewerHasLiked")
}

input CreateCommentInput {
  postId: ID! @globalId(decode: "ID")
  text: String!
  userId: ID! @globalId(decode: "ID")
}

type CreateCommentPayload {
  commentEdge: CommentEdge!
  parent: Comment
}

extend type Mutation @guard @namespace(field: "App\\GraphQL\\Mutations\\Comments") {
  createComment(input: CreateCommentInput! @spread): CreateCommentPayload
    @field(resolver: "CreateComment")
}
